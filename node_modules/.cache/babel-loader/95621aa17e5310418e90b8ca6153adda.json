{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stateToString = exports.AudioSourceState = exports.DecoderState = void 0;\n\nvar browser_client_1 = require(\"@speechly/browser-client\");\n\nObject.defineProperty(exports, \"DecoderState\", {\n  enumerable: true,\n  get: function () {\n    return browser_client_1.DecoderState;\n  }\n});\nObject.defineProperty(exports, \"AudioSourceState\", {\n  enumerable: true,\n  get: function () {\n    return browser_client_1.AudioSourceState;\n  }\n});\nObject.defineProperty(exports, \"stateToString\", {\n  enumerable: true,\n  get: function () {\n    return browser_client_1.stateToString;\n  }\n});\n\n__exportStar(require(\"./types\"), exports);\n\n__exportStar(require(\"./context\"), exports);\n\n__exportStar(require(\"./hooks\"), exports);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAASA;EAAAC;EAAAC;IAAA;EAAY;AAAZ;AAAcF;EAAAC;EAAAC;IAAA;EAAgB;AAAhB;AAAkBF;EAAAC;EAAAC;IAAA;EAAa;AAAb;;AACzCC;;AACAA;;AACAA","names":["Object","enumerable","get","__exportStar"],"sources":["D:\\PROJECTS\\Expense-tracker\\expense-tracker\\node_modules\\@speechly\\react-client\\src\\index.ts"],"sourcesContent":["export { DecoderState, AudioSourceState, stateToString } from '@speechly/browser-client'\nexport * from './types'\nexport * from './context'\nexport * from './hooks'\n"]},"metadata":{},"sourceType":"script"}